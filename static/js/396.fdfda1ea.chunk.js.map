{"version":3,"file":"static/js/396.fdfda1ea.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactItem.styled.js","components/ContactsList/ContactItem.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/contactsPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\nmargin-bottom: 20px;\n  padding: 20px;\n  display: grid;\n  justify-items: center;\n  gap: 20px;\n  border: var(--border);\n`;\n\nexport const Label = styled.label`\n`;","import { useState } from 'react';\nimport { Form, Label } from './ContactForm.styled';\n\nexport function ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value)\n        break;\n      case 'number':\n        setNumber(value)\n        break;\n    \n      default:\n        console.warn(`Field \"${name}\" don't processed`)\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isAdd = addContact({\n      name,\n      number,\n    });\n    if (isAdd) {\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <span>Name:</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        <span>Number:</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <button className=\"btn\">Add contact</button>\n    </Form>\n  );\n}\n","import styled from \"styled-components\";\n\n\nexport const StyledContactItem = styled.li`\ndisplay: grid;\ngap: 4px;\npadding: 8px;\nborder: var(--border);\nborder-radius: 4px;\nbox-shadow: var(--shadow);\n`;","import { StyledContactItem } from './ContactItem.styled';\n\nexport function ContactItem({ name, number, handleDelete }) {\n  return (\n    <StyledContactItem>\n      <p>{name}</p>\n      <p>{number}</p>\n      <button className=\"btn\" type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </StyledContactItem>\n  );\n}\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = store => store.contacts.items;\nexport const selectIsLoading = store => store.contacts.isLoading;\nexport const selectError = store => store.contacts.error;\n\nexport const selectFilter = store => store.filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n    if (filter) {\n      return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n    } else {\n      return contacts;\n    }\n})","import styled from 'styled-components';\n\nexport const ListByContacts = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from '.';\nimport { ListByContacts } from './ContactsList.styled';\n\nexport function ContactsList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ListByContacts>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          handleDelete={() => dispatch(deleteContact(id))}\n        />\n      ))}\n    </ListByContacts>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SearchBox = styled.div`\n\n`","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { SearchBox } from './Filter.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <SearchBox>\n      <label>\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          onChange={e => dispatch(setFilter(e.target.value.toLowerCase()))}\n        />\n      </label>\n    </SearchBox>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact, fetchContacts } from 'redux/contacts/operation';\nimport { useEffect } from 'react';\nimport { Container } from 'components/App/App.styled';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addNewContact = contact => {\n    if (contacts.some(({ name }) => name === contact.name))\n      return alert(`${contact.name} is already in contacts`);\n    dispatch(addContact(contact));\n    return true;\n  };\n\n  return (\n    <>\n      <h1 className=\"title main-title\">Phonebook</h1>\n      <Container>\n        <div className=\"form-container\">\n          <h2 className=\"title\">Add contact</h2>\n          <ContactForm addContact={addNewContact} />\n          <Filter />\n        </div>\n        <div className=\"contacts-container\">\n          <h2 className=\"title\">Contacts</h2>\n          <ContactsList />\n        </div>\n      </Container>\n    </>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","ContactForm","_ref","addContact","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","console","warn","concat","_jsxs","onSubmit","preventDefault","children","_jsx","type","pattern","title","required","onChange","className","StyledContactItem","ContactItem","handleDelete","onClick","selectContacts","store","contacts","items","selectFilteredContacts","createSelector","filter","toLowerCase","includes","ListByContacts","ContactsList","useSelector","dispatch","useDispatch","map","id","deleteContact","SearchBox","Filter","setFilter","ContactsPage","useEffect","fetchContacts","_Fragment","Container","contact","some","alert"],"sourceRoot":""}